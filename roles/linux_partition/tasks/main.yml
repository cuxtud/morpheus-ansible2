---
- name: "Collect hw info"
  setup:
    gather_subset:
      - hardware

- name: Store the os disk list count as a fact
  set_fact:
    disk_data_count: "{{ hostvars[inventory_hostname].ansible_devices.keys() | map('regex_search', 'sd.*') | select('string') | length }}"

- name: Debug existing disk count
  debug:
    var: disk_data_count

- name: Store the disk count of morpheus as a fact
  set_fact:
    disk_list_count: "{{ morpheus['instance']['containers'][0]['server']['volumes'] | length }}"

- name: Debug instance disk count
  debug:
    var: disk_list_count

- name: Convert counts to integers
  set_fact:
    disk_data_count_int: "{{ disk_data_count | int }}"
    disk_list_count_int: "{{ disk_list_count | int }}"

- name: Debug converted counts
  debug:
    msg: "disk_data_count_int: {{ disk_data_count_int }}, disk_list_count_int: {{ disk_list_count_int }}"

- name: Debug alphabet index
  debug:
    msg: "'abcdefghijklmnopqrstuvwxyz'[{{ disk_data_count_int }}]"

- name: Check if counts are different and set new_disk if necessary
  set_fact:
    new_disk: "sd{{ 'abcdefghijklmnopqrstuvwxyz'[disk_data_count_int | int] }}"
  when: disk_list_count_int > disk_data_count_int

- name: Debug new_disk variable
  debug:
    var: new_disk



- name: Scan for new disks
  become: true
  shell: echo "- - -" | sudo tee /sys/class/scsi_host/host*/scan >/dev/null

# tasks file for linux_partition
- name: Create partition
  community.general.parted:
    device: "/dev/{{new_disk}}"
    number: 1
    label: "gpt"
    flags: lvm
    state: present
    part_end: "100%"

- name: Create/Extend PV and VG
  community.general.lvg:
    vg: datavg
    pvs: "/dev/{{new_disk}}1"

- name: Get the count of the volume info from morpheus
  set_fact: 
    disk_count_array_int: "{{ disk_list_count_int  - 1 }}"

- name: get lv path from morpheus
  set_fact:
    lv_path: "{{ morpheus['instance']['containers'][0]['server']['volumes'][disk_count_array_int]['name'] }}"

- name: Replace / with _ and set lv_name
  set_fact:
    lv_name: "{{ original_string | replace('/', '_') }}"

- name: LV with 100% free space in vg
  community.general.lvol:
    vg: datavg
    lv: "{{ lv_name }}"
    size: 100%FREE

- name: Format the lv with ext4
  community.general.filesystem:
    fstype: ext4
    dev: "/dev/datavg/{{ lv_name }}"

- name: Target directory
  ansible.builtin.file:
    path: "{{ lv_path }}"
    state: directory
    mode: '0755'

- name: mount the lv
  ansible.posix.mount:
    path: "{{ lv_path }}"
    src: "/dev/datavg/{{ lv_name }}"
    fstype: ext4
    state: mounted